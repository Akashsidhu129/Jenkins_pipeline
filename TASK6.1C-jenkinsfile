pipeline {
    agent any
    
    environment {
        directory_path = "/users/akashdeep/.jenkins"
        testing_environment = "TASK_6.1C"
        PRODUCTION_ENVIRONMENT = "Akashdeep Singh Sidhu"
        EMAIL_RECIPIENT = "akashsidhu129.aus@gmail.com"
    }
    
    stages {
        stage('Build') {
            steps {
                echo "Getting source code from: $DIRECTORY_PATH"
                echo "Building the code using Maven..."
                // Tool: Maven for building automation
                echo "Tool used: Maven"
            }
        }
        
        stage('Unit and Integration Tests') {
            steps {
                echo "Running Unit tests using JUnit..."
                echo "Running Integration tests using Selenium..."
                // Tools: JUnit for unit testing, Selenium for integration testing
                echo "Tools used: Java, Selenium"
            }
        }
        
        stage('Code Analysis') {
            steps {
                echo "Performing code analysis using SonarQube..."
                // Tool: SonarQube for code quality analysis
                echo "Tool used: SonarQube"
            }
        }
        
        stage('Security Scan') {
            steps {
                echo "Performing security scan using OWASP Dependency-Check..."
                // Tool: OWASP Dependency-Check for security scanning
                echo "Tool used: OWASP Dependency-Check"
            }
        }
        
        stage('Deploy to Staging') {
            steps {
                echo "Deploying the application to the staging environment: $TESTING_ENVIRONMENT"
                // Deployment to staging server (e.g., AWS EC2 instance)
                echo "Staging server: AWS EC2 instance"
            }
        }
        
        stage('Integration Tests on Staging') {
            steps {
                echo "Running Integration tests on the staging environment..."
                // Running integration tests on staging environment
                echo "Tools used: Selenium"
            }
        }
        
        stage('Deploy to Production') {
            steps {
                echo "Deploying the application to the production environment: $PRODUCTION_ENVIRONMENT"
                // Deployment to production server (e.g., AWS EC2 instance)
                echo "Production server: AWS EC2 instance"
            }
        }
    }
    
    post {
        always {
            echo "Pipeline execution completed"
        }
        success {
            echo "Pipeline executed successfully"
            mail to: "$EMAIL_RECIPIENT",
                subject: "Build Status: SUCCESS",
                body: "The Jenkins pipeline has successfully completed all stages."
        }
        failure {
            echo "Pipeline execution failed"
            mail to: "$EMAIL_RECIPIENT",
                subject: "Build Status: FAILURE",
                body: "The Jenkins pipeline has failed."
        }
    }
}
